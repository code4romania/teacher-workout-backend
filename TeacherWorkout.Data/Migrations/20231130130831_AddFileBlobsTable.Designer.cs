// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TeacherWorkout.Data;

#nullable disable

namespace TeacherWorkout.Data.Migrations
{
    [DbContext(typeof(TeacherWorkoutContext))]
    [Migration("20231130130831_AddFileBlobsTable")]
    partial class AddFileBlobsTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TeacherWorkout.Domain.Models.FileBlob", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<byte[]>("Content")
                        .HasColumnType("bytea");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Mimetype")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("FileBlobs");
                });

            modelBuilder.Entity("TeacherWorkout.Domain.Models.Image", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("FileBlobId")
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FileBlobId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("TeacherWorkout.Domain.Models.Lesson", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int?>("Duration")
                        .HasColumnType("integer");

                    b.Property<int>("State")
                        .HasColumnType("integer");

                    b.Property<string>("ThemeId")
                        .HasColumnType("text");

                    b.Property<string>("ThumbnailId")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ThumbnailId");

                    b.HasIndex("ThemeId", "State");

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("TeacherWorkout.Domain.Models.Theme", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("ThumbnailId")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ThumbnailId");

                    b.ToTable("Themes");
                });

            modelBuilder.Entity("TeacherWorkout.Domain.Models.Image", b =>
                {
                    b.HasOne("TeacherWorkout.Domain.Models.FileBlob", "FileBlob")
                        .WithMany()
                        .HasForeignKey("FileBlobId");

                    b.Navigation("FileBlob");
                });

            modelBuilder.Entity("TeacherWorkout.Domain.Models.Lesson", b =>
                {
                    b.HasOne("TeacherWorkout.Domain.Models.Theme", "Theme")
                        .WithMany()
                        .HasForeignKey("ThemeId");

                    b.HasOne("TeacherWorkout.Domain.Models.Image", "Thumbnail")
                        .WithMany()
                        .HasForeignKey("ThumbnailId");

                    b.Navigation("Theme");

                    b.Navigation("Thumbnail");
                });

            modelBuilder.Entity("TeacherWorkout.Domain.Models.Theme", b =>
                {
                    b.HasOne("TeacherWorkout.Domain.Models.Image", "Thumbnail")
                        .WithMany()
                        .HasForeignKey("ThumbnailId");

                    b.Navigation("Thumbnail");
                });
#pragma warning restore 612, 618
        }
    }
}
