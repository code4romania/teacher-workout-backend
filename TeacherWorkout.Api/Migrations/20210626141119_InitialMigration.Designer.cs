// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TeacherWorkout.Api;

namespace TeacherWorkout.Api.Migrations
{
    [DbContext(typeof(TeacherWorkoutContext))]
    [Migration("20210626141119_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("TeacherWorkout.Api.Models.Answer", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<bool>("Correct")
                        .HasColumnType("boolean");

                    b.Property<string>("StepId")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("StepId");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("TeacherWorkout.Api.Models.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("TeacherWorkout.Api.Models.Lesson", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ThemeId")
                        .HasColumnType("text");

                    b.Property<int?>("ThumbnailId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ThemeId");

                    b.HasIndex("ThumbnailId");

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("TeacherWorkout.Api.Models.LessonStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CurrentLessonStepId")
                        .HasColumnType("text");

                    b.Property<int>("PercentCompleted")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CurrentLessonStepId");

                    b.ToTable("LessonStatuses");
                });

            modelBuilder.Entity("TeacherWorkout.Api.Models.LessonStepBase", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LessonId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LessonId");

                    b.ToTable("Steps");

                    b.HasDiscriminator<string>("Discriminator").IsComplete(false).HasValue("LessonStepBase");
                });

            modelBuilder.Entity("TeacherWorkout.Api.Models.LessonSummaryStep", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("ExperiencePoints")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("LessonSummarySteps");
                });

            modelBuilder.Entity("TeacherWorkout.Api.Models.Theme", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int?>("ThumbnailId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ThumbnailId");

                    b.ToTable("Themes");
                });

            modelBuilder.Entity("TeacherWorkout.Api.Models.ExerciseStep", b =>
                {
                    b.HasBaseType("TeacherWorkout.Api.Models.LessonStepBase");

                    b.Property<string>("Question")
                        .HasColumnType("text");

                    b.HasDiscriminator().HasValue("ExerciseStep");
                });

            modelBuilder.Entity("TeacherWorkout.Api.Models.SlideStep", b =>
                {
                    b.HasBaseType("TeacherWorkout.Api.Models.LessonStepBase");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int?>("ImageId")
                        .HasColumnType("integer");

                    b.Property<string>("PreviousStepId")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasIndex("ImageId");

                    b.HasIndex("PreviousStepId");

                    b.HasDiscriminator().HasValue("SlideStep");
                });

            modelBuilder.Entity("TeacherWorkout.Api.Models.Answer", b =>
                {
                    b.HasOne("TeacherWorkout.Api.Models.ExerciseStep", "Step")
                        .WithMany("Answers")
                        .HasForeignKey("StepId");

                    b.Navigation("Step");
                });

            modelBuilder.Entity("TeacherWorkout.Api.Models.Lesson", b =>
                {
                    b.HasOne("TeacherWorkout.Api.Models.Theme", "Theme")
                        .WithMany("Lessons")
                        .HasForeignKey("ThemeId");

                    b.HasOne("TeacherWorkout.Api.Models.Image", "Thumbnail")
                        .WithMany()
                        .HasForeignKey("ThumbnailId");

                    b.Navigation("Theme");

                    b.Navigation("Thumbnail");
                });

            modelBuilder.Entity("TeacherWorkout.Api.Models.LessonStatus", b =>
                {
                    b.HasOne("TeacherWorkout.Api.Models.LessonStepBase", "CurrentLessonStep")
                        .WithMany()
                        .HasForeignKey("CurrentLessonStepId");

                    b.Navigation("CurrentLessonStep");
                });

            modelBuilder.Entity("TeacherWorkout.Api.Models.LessonStepBase", b =>
                {
                    b.HasOne("TeacherWorkout.Api.Models.Lesson", "Lesson")
                        .WithMany("Steps")
                        .HasForeignKey("LessonId");

                    b.Navigation("Lesson");
                });

            modelBuilder.Entity("TeacherWorkout.Api.Models.Theme", b =>
                {
                    b.HasOne("TeacherWorkout.Api.Models.Image", "Thumbnail")
                        .WithMany()
                        .HasForeignKey("ThumbnailId");

                    b.Navigation("Thumbnail");
                });

            modelBuilder.Entity("TeacherWorkout.Api.Models.SlideStep", b =>
                {
                    b.HasOne("TeacherWorkout.Api.Models.Image", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId");

                    b.HasOne("TeacherWorkout.Api.Models.LessonStepBase", "PreviousStep")
                        .WithMany()
                        .HasForeignKey("PreviousStepId");

                    b.Navigation("Image");

                    b.Navigation("PreviousStep");
                });

            modelBuilder.Entity("TeacherWorkout.Api.Models.Lesson", b =>
                {
                    b.Navigation("Steps");
                });

            modelBuilder.Entity("TeacherWorkout.Api.Models.Theme", b =>
                {
                    b.Navigation("Lessons");
                });

            modelBuilder.Entity("TeacherWorkout.Api.Models.ExerciseStep", b =>
                {
                    b.Navigation("Answers");
                });
#pragma warning restore 612, 618
        }
    }
}
